{
  "Select Dropdown": {
    "description": "Select Dropdown",
    "prefix": ["dropdown"],
    "body": ["<$1Dropdown register={register} errors={errors} />"],
  },
  "Select Dropdown Template": {
    "description": "Select Dropdown Template",
    "prefix": ["dropdown-template"],
    "body": [
      "",
      "import { SelectField } from \"@/components/Elements\";",
      "import { FieldErrors, UseFormRegister } from \"react-hook-form\";",
      "",
      "const mappings = {",
      "  // TODO: add mappings",
      "  // mappings is nothing but object of displayValue: (string or num)-Value/Enum.Variant",
      "  // e.g.",
      "  \"1 Month\": 1,",
      "  \"2 Months\": 2,",
      "};",
      "",
      "export const $1Dropdown: React.FC<{",
      "  register: UseFormRegister<FormValues>;",
      "  errors: FieldErrors<FormValues>;",
      "}> = ({ register, errors }) => {",
      "  // TODO: set default value",
      "  // valid defaultValue is - a key from mappings object defined as above",
      "  const defaultValue =",
      "    mappings[Object.keys(mappings)[0] as keyof typeof mappings];",
      "",
      "  const Component = () => {",
      "    return (",
      "      <SelectField",
      "        label=\"$LABEL\"",
      "        registration={register(\"$FIELD_FROM_FORM_VALUES\")}",
      "        formError={errors.$FIELD_FROM_FORM_VALUES}",
      "        defaultValue={defaultValue}",
      "        options={Object.entries(mappings).map(([displayValue, value]) => ({",
      "          label: displayValue,",
      "          value: value,",
      "        }))}",
      "      />",
      "    );",
      "  };",
      "",
      "  return <Component />;",
      "};",
      "",
      "",
    ],
  },
}
